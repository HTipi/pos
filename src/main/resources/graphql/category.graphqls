scalar Date
type Query {
    categories: [Category]
    category(id: ID!): Category
    user(id: ID!): User
    users: [User]
    userRole(userRoleId: ID!): UserRole
    deliveryContact(deliveryContactId: ID!): DeliveryContact

}

type Mutation {
    createCategory(input: CategoryInput): Category!

    createUser(input: UserInput): User!

    createUserRole(userId: Int, roleId: Int, userRoleRequest: UserRoleInput): UserRole!
    updateUserRole(userId: Int, roleId: Int, userRoleRequest: UserRoleInput): UserRole!

    createDeliveryContact(branchId: Int, deliveryContactRequest: DeliveryContactInput): DeliveryContact!
    updateDeliveryContact(branchId: Int, deliveryContactRequest: DeliveryContactInput): DeliveryContact!

}

input CategoryInput{
    name: String!,
    nameKh: String!
    enable: Boolean!
}

type Category{
    id: ID!,
    name: String!,
    nameKh: String!,
    enable: Boolean,
    corporates: [Corporate],
}

type Address{
    id: ID!,
    code: String!,
    name: String!,
    nameKh: String!,
    addresses: [Address],
    address: Address
}

type Corporate{
    id: ID!,
    name: String!,
    nameKh: String!,
    category: Category,
    branches: [Branch],
    enable: Boolean
}

input DeliveryContactInput{
    id: ID!,
    telephone: String!,
    enable: Boolean
}

type DeliveryContact{
    id: ID!,
    branch: Branch,
    telephone: String!,
    enable: Boolean
}

type Branch{
    id: ID!,
    name: String!,
    nameKh: String!,
    telephone: String!,
    isMain: Boolean!,
    address: Address,
    corporate: Corporate,
    deliveryContacts: [DeliveryContact],
    enable: Boolean
}

input UserInput{
    firstName: String!,
    lastName: String!,
    username: String!,
    nameKh: String!,
    password: String!,
    confirmPassword: String!,
    telephone: String!,
    dateOfBirth: Date!,
    enable: Boolean
}

type User{
    id: ID!,
    firstName: String!,
    lastName: String!,
    username: String!,
    nameKh: String!,
    password: String!,
    confirmPassword: String!,
    telephone: String!,
    dateOfBirth: Date!,
    enable: Boolean
}


input RoleInput{
    name: String!,
    nameKh: String!,
    enable: Boolean
}

type Role{
    id: ID!,
    name: String!,
    nameKh: String!,
    enable: Boolean
}

input UserRoleInput{
    userId: Int!,
    roleId: Int!,
    enable: Boolean
}

type UserRole{
    id: ID!,
    user: User,
    role: Role,
    enable: Boolean
}

